


create table authors (
    id bigserial,
    full_name varchar(255),
    primary key (id)
);

create table genres (
    id bigserial,
    name varchar(255),
    primary key (id)
);

create table books (
    id bigserial,
    title varchar(255),
    author_id bigint references authors (id) on delete cascade,
    primary key (id)
);

create table comments(
    id bigserial,
    book_id bigint references books(id) on delete cascade,
    text varchar(255),
    primary key(id)
);

create table books_genres (
    book_id bigint references books(id) on delete cascade,
    genre_id bigint references genres(id) on delete cascade,
    primary key (book_id, genre_id)
);

insert into authors(full_name)
values ('Author_1'), ('Author_2'), ('Author_3');

insert into genres(name)
values ('Genre_1'), ('Genre_2'), ('Genre_3'),
       ('Genre_4'), ('Genre_5'), ('Genre_6');

insert into books(title, author_id)
values ('BookTitle_1', 1), ('BookTitle_2', 2), ('BookTitle_3', 3);

insert into books_genres(book_id, genre_id)
values (1, 1),   (1, 2),
       (2, 3),   (2, 4),
       (3, 5),   (3, 6);

insert into comments(book_id,text)
values (2,'Nice book'),
       (3,'Very good'),
       (3,'Boring');






 -- Autogenerated: do not edit this file

 CREATE TABLE BATCH_JOB_INSTANCE  (
 	JOB_INSTANCE_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
 	VERSION BIGINT ,
 	JOB_NAME VARCHAR(100) NOT NULL,
 	JOB_KEY VARCHAR(32) NOT NULL,
 	constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
 ) ;

 CREATE TABLE BATCH_JOB_EXECUTION  (
 	JOB_EXECUTION_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
 	VERSION BIGINT  ,
 	JOB_INSTANCE_ID BIGINT NOT NULL,
 	CREATE_TIME TIMESTAMP(9) NOT NULL,
 	START_TIME TIMESTAMP(9) DEFAULT NULL ,
 	END_TIME TIMESTAMP(9) DEFAULT NULL ,
 	STATUS VARCHAR(10) ,
 	EXIT_CODE VARCHAR(2500) ,
 	EXIT_MESSAGE VARCHAR(2500) ,
 	LAST_UPDATED TIMESTAMP(9),
 	constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
 	references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
 ) ;

 CREATE TABLE BATCH_JOB_EXECUTION_PARAMS  (
 	JOB_EXECUTION_ID BIGINT NOT NULL ,
 	PARAMETER_NAME VARCHAR(100) NOT NULL ,
 	PARAMETER_TYPE VARCHAR(100) NOT NULL ,
 	PARAMETER_VALUE VARCHAR(2500) ,
 	IDENTIFYING CHAR(1) NOT NULL ,
 	constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
 	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
 ) ;

 CREATE TABLE BATCH_STEP_EXECUTION  (
 	STEP_EXECUTION_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
 	VERSION BIGINT NOT NULL,
 	STEP_NAME VARCHAR(100) NOT NULL,
 	JOB_EXECUTION_ID BIGINT NOT NULL,
 	CREATE_TIME TIMESTAMP(9) NOT NULL,
 	START_TIME TIMESTAMP(9) DEFAULT NULL ,
 	END_TIME TIMESTAMP(9) DEFAULT NULL ,
 	STATUS VARCHAR(10) ,
 	COMMIT_COUNT BIGINT ,
 	READ_COUNT BIGINT ,
 	FILTER_COUNT BIGINT ,
 	WRITE_COUNT BIGINT ,
 	READ_SKIP_COUNT BIGINT ,
 	WRITE_SKIP_COUNT BIGINT ,
 	PROCESS_SKIP_COUNT BIGINT ,
 	ROLLBACK_COUNT BIGINT ,
 	EXIT_CODE VARCHAR(2500) ,
 	EXIT_MESSAGE VARCHAR(2500) ,
 	LAST_UPDATED TIMESTAMP(9),
 	constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
 	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
 ) ;

 CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
 	STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
 	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
 	SERIALIZED_CONTEXT LONGVARCHAR ,
 	constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
 	references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
 ) ;

 CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
 	JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
 	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
 	SERIALIZED_CONTEXT LONGVARCHAR ,
 	constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
 	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
 ) ;

 CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ;
 CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ;
 CREATE SEQUENCE BATCH_JOB_SEQ;