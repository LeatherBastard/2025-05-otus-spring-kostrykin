create table authors (
    id bigserial,
    full_name varchar(255),
    primary key (id)
);

create table genres (
    id bigserial,
    name varchar(255),
    primary key (id)
);

create table books (
    id bigserial,
    title varchar(255),
    author_id bigint references authors (id) on delete cascade,
    primary key (id)
);

create table comments(
    id bigserial,
    book_id bigint references books(id) on delete cascade,
    text varchar(255),
    primary key(id)
);

create table books_genres (
    book_id bigint references books(id) on delete cascade,
    genre_id bigint references genres(id) on delete cascade,
    primary key (book_id, genre_id)
);

create table users (
    id bigserial,
    username varchar(50),
    password varchar(100),
    role varchar(20)
);

CREATE TABLE IF NOT EXISTS acl_sid (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    principal BOOLEAN NOT NULL,
    sid VARCHAR(100) NOT NULL,
    CONSTRAINT unique_acl_sid UNIQUE (sid, principal)
);

CREATE TABLE IF NOT EXISTS acl_class (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    class VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS acl_object_identity (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    object_id_class BIGINT NOT NULL,
    object_id_identity VARCHAR(36) NOT NULL,
    parent_object BIGINT,
    owner_sid BIGINT,
    entries_inheriting BOOLEAN NOT NULL,
    CONSTRAINT unique_acl_obj_id UNIQUE (object_id_class, object_id_identity),
    FOREIGN KEY (parent_object) REFERENCES acl_object_identity(id),
    FOREIGN KEY (object_id_class) REFERENCES acl_class(id),
    FOREIGN KEY (owner_sid) REFERENCES acl_sid(id)
);

CREATE TABLE IF NOT EXISTS acl_entry (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    acl_object_identity BIGINT NOT NULL,
    ace_order INTEGER NOT NULL,
    sid BIGINT NOT NULL,
    mask INTEGER NOT NULL,
    granting BOOLEAN NOT NULL,
    audit_success BOOLEAN NOT NULL,
    audit_failure BOOLEAN NOT NULL,
    CONSTRAINT unique_acl_entry UNIQUE (acl_object_identity, ace_order),
    FOREIGN KEY (acl_object_identity) REFERENCES acl_object_identity(id),
    FOREIGN KEY (sid) REFERENCES acl_sid(id)
);

insert into authors(full_name)
values ('Author_1'), ('Author_2'), ('Author_3');

insert into genres(name)
values ('Genre_1'), ('Genre_2'), ('Genre_3'),
       ('Genre_4'), ('Genre_5'), ('Genre_6');

insert into books(title, author_id)
values ('BookTitle_1', 1), ('BookTitle_2', 2), ('BookTitle_3', 3);

insert into books_genres(book_id, genre_id)
values (1, 1),   (1, 2),
       (2, 3),   (2, 4),
       (3, 5),   (3, 6);

insert into comments(book_id,text)
values (2,'Nice book'),
       (3,'Very good'),
       (3,'Boring');

insert into users(username,password,role)
values('user','$2a$12$LXP.6OLtXOvIaxqVUAg9IOve.Ogc/VAQZbkwpaq8M5veQ.kvN9X4C','ADMIN');

INSERT INTO acl_sid (id, principal, sid) VALUES
(1, 0, 'ROLE_ADMIN'),
(2, 0, 'ROLE_USER');

INSERT INTO acl_class (id, class) VALUES
(1, 'ru.otus.hw.models.Book');

INSERT INTO acl_object_identity (id, object_id_class, object_id_identity, parent_object, owner_sid, entries_inheriting) VALUES
(1, 1, 1, NULL, 1, 0),
(2, 1, 2, NULL, 1, 0),
(3, 1, 3, NULL, 1, 0);

INSERT INTO acl_entry (id, acl_object_identity, ace_order, sid, mask,
                       granting, audit_success, audit_failure) VALUES
(1, 1, 1, 1, 16, 1, 1, 1),
(2, 1, 2, 2, 1,  1, 1, 1),
(3, 2, 1, 1, 16, 1, 1, 1),
(4, 2, 2, 2, 1,  1, 1, 1),
(5, 3, 1, 1, 16, 1, 1, 1),
(6, 3, 2, 2, 1,  1, 1, 1);


